@model NSIX.Models.SAR

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">

        
            <div role="tabpanel" class="tab-pane active" id="home">
                <br />
                <h4>Observed Date and Time</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SarID)

                <div class="form-group">
                    @Html.LabelFor(model => model.ActivityDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActivityDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActivityDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActivityTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActivityTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActivityTime, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div role="tabpanel" class="tab-pane" id="location">
                <br />
                <h4>Location Details</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Location, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StateAbbrev, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StateAbbrev", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StateAbbrev, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div>
                    <div hidden id="FullAddress">
                        @Model.FullAddress
                    </div>
                    @{Html.RenderPartial("map");}
                </div>
                <br />

            </div>
            <div role="tabpanel" class="tab-pane" id="activity">
                <br />
                <h4>Activity Details</h4>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SuspiciousActivityCodeSimpleTypeID, "Suspicious Activity", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SuspiciousActivityCodeSimpleTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SuspiciousActivityCodeSimpleTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TargetSectorCodeSimpleTypeID, "Target Sector", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TargetSectorCodeSimpleTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TargetSectorCodeSimpleTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipClassCodeSimpleTypeID, "Tip Class", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipClassCodeSimpleTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipClassCodeSimpleTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipDomainCodeSimpleTypeID, "Tip Domain", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipDomainCodeSimpleTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipDomainCodeSimpleTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div role="tabpanel" class="tab-pane" id="audit">
                <br />
                <h4>Audit Details</h4>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedByID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedByID, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedByName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedByName, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedDate, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedByID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedByID, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedByName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedByName, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedDate, null, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" class="btn btn-default" value="Cancel" onclick="location.href='@Url.Action("", "SAR")'" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
