@model NSIX.Models.Vehicle

@{
    ViewBag.Title = "Edit Vehicle";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VehicleID)

        <div class="form-group">
            @Html.LabelFor(model => model.LicencePlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicencePlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicencePlate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateAbbrev, "State of Registration", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateAbbrev", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateAbbrev, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleColorID, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VehicleColorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleColorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleMakeID, "Make", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VehicleMakeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleMakeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleModelID, "Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VehicleModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @if (ViewBag.SarID != null)
            {
                @Html.Hidden("SarID", (int)ViewBag.SarId)
            }
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />

                @if (ViewBag.SarID != null)
        {
            <input type="button" class="btn btn-default" value="Cancel" onclick="location.href='@Url.Action("Details", "SAR", new { id = ViewBag.SarId })'" />

}
else
{
        <input type="button" class="btn btn-default" value="Cancel" onclick="location.href='@Url.Action("Index", "Vehicles")'" />
}

            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
<*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
