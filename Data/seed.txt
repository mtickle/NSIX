namespace NSIX.Migrations
{
    using NSIX.Models;
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Data.Entity.Migrations;
    using System.Linq;

    internal sealed class Configuration : DbMigrationsConfiguration<NSIX.DAL.NSIXContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = false;
        }

        protected override void Seed(NSIX.DAL.NSIXContext context)
        {

            var states = new List<State>
            {
                 new State{Name="ALABAMA", StateAbbrev="AL"},
                 new State{Name="ALASKA", StateAbbrev="AK"},
                 new State{Name="ARIZONA", StateAbbrev="AZ"},
                 new State{Name="ARKANSAS", StateAbbrev="AR"},
                 new State{Name="CALIFORNIA", StateAbbrev="CA"},
                 new State{Name="COLORADO", StateAbbrev="CO"},
                 new State{Name="CONNECTICUT", StateAbbrev="CT"},
                 new State{Name="DELAWARE", StateAbbrev="DE"},
                 new State{Name="FLORIDA", StateAbbrev="FL"},
                 new State{Name="GEORGIA", StateAbbrev="GA"},
                 new State{Name="HAWAII", StateAbbrev="HI"},
                 new State{Name="IDAHO", StateAbbrev="ID"},
                 new State{Name="ILLINOIS", StateAbbrev="IL"},
                 new State{Name="INDIANA", StateAbbrev="IN"},
                 new State{Name="IOWA", StateAbbrev="IA"},
                 new State{Name="KANSAS", StateAbbrev="KS"},
                 new State{Name="KENTUCKY", StateAbbrev="KY"},
                 new State{Name="LOUISIANA", StateAbbrev="LA"},
                 new State{Name="MAINE", StateAbbrev="ME"},
                 new State{Name="MARYLAND", StateAbbrev="MD"},
                 new State{Name="MASSACHUSETTS", StateAbbrev="MA"},
                 new State{Name="MICHIGAN", StateAbbrev="MI"},
                 new State{Name="MINNESOTA", StateAbbrev="MN"},
                 new State{Name="MISSISSIPPI", StateAbbrev="MS"},
                 new State{Name="MISSOURI", StateAbbrev="MO"},
                 new State{Name="MONTANA", StateAbbrev="MT"},
                 new State{Name="NEBRASKA", StateAbbrev="NE"},
                 new State{Name="NEVADA", StateAbbrev="NV"},
                 new State{Name="NEW HAMPSHIRE", StateAbbrev="NH"},
                 new State{Name="NEW JERSEY", StateAbbrev="NJ"},
                 new State{Name="NEW MEXICO", StateAbbrev="NM"},
                 new State{Name="NEW YORK", StateAbbrev="NY"},
                 new State{Name="NORTH CAROLINA", StateAbbrev="NC"},
                 new State{Name="NORTH DAKOTA", StateAbbrev="ND"},
                 new State{Name="OHIO", StateAbbrev="OH"},
                 new State{Name="OKLAHOMA", StateAbbrev="OK"},
                 new State{Name="OREGON", StateAbbrev="OR"},
                 new State{Name="PENNSYLVANIA", StateAbbrev="PA"},
                 new State{Name="RHODE ISLAND", StateAbbrev="RI"},
                 new State{Name="SOUTH CAROLINA", StateAbbrev="SC"},
                 new State{Name="SOUTH DAKOTA", StateAbbrev="SD"},
                 new State{Name="TENNESSEE", StateAbbrev="TN"},
                 new State{Name="TEXAS", StateAbbrev="TX"},
                 new State{Name="UTAH", StateAbbrev="UT"},
                 new State{Name="VERMONT", StateAbbrev="VT"},
                 new State{Name="VIRGINIA", StateAbbrev="VA"},
                 new State{Name="WASHINGTON", StateAbbrev="WA"},
                 new State{Name="WEST VIRGINIA", StateAbbrev="WV"},
                 new State{Name="WISCONSIN", StateAbbrev="WI"},
                 new State{Name="WYOMING", StateAbbrev="WY"}

            };
            states.ForEach(s => context.State.Add(s));
            context.SaveChanges();

            var activities = new List<SuspiciousActivityCodeSimpleType>
            {
               new SuspiciousActivityCodeSimpleType{FacetValue="AVIATION", Description="AVIATION ACTIVITY"},
                new SuspiciousActivityCodeSimpleType{FacetValue="CYBER", Description="CYBER ATTACK"},
                new SuspiciousActivityCodeSimpleType{FacetValue="ELICIT", Description="ELICITING INFORMATION"},
                new SuspiciousActivityCodeSimpleType{FacetValue="EXPERT", Description="ACQUISITION OF EXPERTISE"},
                new SuspiciousActivityCodeSimpleType{FacetValue="INTRSN", Description="BREACH/ATTEMPTED INSTRUSION"},
                new SuspiciousActivityCodeSimpleType{FacetValue="MATRLS", Description="MATERIALS/ACQUISITION/STORAGE"},
                new SuspiciousActivityCodeSimpleType{FacetValue="MISREP", Description="MISREPRESENTATION"},
                new SuspiciousActivityCodeSimpleType{FacetValue="PHOTO", Description="PHOTOGRAPHY"},
                new SuspiciousActivityCodeSimpleType{FacetValue="RECRUT", Description="RECRUITING"},
                new SuspiciousActivityCodeSimpleType{FacetValue="SABOT", Description="SABOTAGE/TAMPERING/VANDALISM"},
                new SuspiciousActivityCodeSimpleType{FacetValue="SECTOR", Description="SECTOR-SPECIFIC INCIDENT"},
                new SuspiciousActivityCodeSimpleType{FacetValue="SURVL", Description="OBSERVATION/SURVEILLANCE"},
                new SuspiciousActivityCodeSimpleType{FacetValue="TESTSEC", Description="TESTING OR PROBING OF SECURITY"},
                new SuspiciousActivityCodeSimpleType{FacetValue="THEFT", Description="THEFT/LOSS/DIVERSION"},
                new SuspiciousActivityCodeSimpleType{FacetValue="THREAT", Description="EXPRESSED OR IMPLIED THREAT"},
                new SuspiciousActivityCodeSimpleType{FacetValue="WPNS", Description="WEAPONS DISCOVERY"}
            };
            activities.ForEach(s => context.SuspiciousActivityCodeSimpleType.Add(s));
            context.SaveChanges();


            var sectors = new List<TargetSectorCodeSimpleType>
            {
                new TargetSectorCodeSimpleType{FacetValue="AGRI", Description="Food, Agriculture, Livestock"},
                new TargetSectorCodeSimpleType{FacetValue="CHEM", Description="Chemical"},
                new TargetSectorCodeSimpleType{FacetValue="COMM	", Description="Commercial Assets"},
                new TargetSectorCodeSimpleType{FacetValue="CORR", Description="Correctional Location"},
                new TargetSectorCodeSimpleType{FacetValue="CSTL", Description="Coastal Facilities"},
                new TargetSectorCodeSimpleType{FacetValue="CULTR", Description="Cultural/Religious/Ethnical"},
                new TargetSectorCodeSimpleType{FacetValue="DAMS", Description="Dams"},
                new TargetSectorCodeSimpleType{FacetValue="DFNSE", Description="Defense Industrial Base"},
                new TargetSectorCodeSimpleType{FacetValue="EDU", Description="Education"},
                new TargetSectorCodeSimpleType{FacetValue="EMRG	", Description="Emergency Services"},
                new TargetSectorCodeSimpleType{FacetValue="ENRG", Description="Energy, Utilities"},
                new TargetSectorCodeSimpleType{FacetValue="ENTMT", Description="Entertainment Venue"},
                new TargetSectorCodeSimpleType{FacetValue="FIN", Description="Banking, Finance"},
                new TargetSectorCodeSimpleType{FacetValue="GVTBLDG", Description="Government Facilities"},
                new TargetSectorCodeSimpleType{FacetValue="HAZMAT", Description="Chemical, Hazardous Material"},
                new TargetSectorCodeSimpleType{FacetValue="HLTH", Description="Healthcare, Public Health"},
                new TargetSectorCodeSimpleType{FacetValue="IT", Description="Information Technology"},
                new TargetSectorCodeSimpleType{FacetValue="LIVSTK", Description="Livestock"},
                new TargetSectorCodeSimpleType{FacetValue="MAIL", Description="Postal, Shipping"},
                new TargetSectorCodeSimpleType{FacetValue="MASS", Description="Mass Gathering Location"},
                new TargetSectorCodeSimpleType{FacetValue="MFG", Description="Manufacturing"},
                new TargetSectorCodeSimpleType{FacetValue="MNMT", Description="National Monument, Icon"},
                new TargetSectorCodeSimpleType{FacetValue="NATRL", Description="Natural Threats"},
                new TargetSectorCodeSimpleType{FacetValue="NCLR", Description="	Nuclear Facilities"},
                new TargetSectorCodeSimpleType{FacetValue="OTHR", Description="Other"},
                new TargetSectorCodeSimpleType{FacetValue="POP", Description="Population"},
                new TargetSectorCodeSimpleType{FacetValue="PRSN", Description="Person"},
                new TargetSectorCodeSimpleType{FacetValue="RETL", Description="Retail"},
                new TargetSectorCodeSimpleType{FacetValue="SPCFXN", Description="Special Function"},
                new TargetSectorCodeSimpleType{FacetValue="TACTCP", Description="Tactical Command Post"},
                new TargetSectorCodeSimpleType{FacetValue="TELCM", Description="Telecommunications"},
                new TargetSectorCodeSimpleType{FacetValue="TRANS", Description="Transportation"},
                new TargetSectorCodeSimpleType{FacetValue="UTL", Description="	Utilities"},
                new TargetSectorCodeSimpleType{FacetValue="WATR", Description="Water"}
            };
            sectors.ForEach(s => context.TargetSectorCodeSimpleType.Add(s));
            context.SaveChanges();

            var classes = new List<TipClassCodeSimpleType>
            {
                new TipClassCodeSimpleType{FacetValue="BIO", Description="Biological"},
                new TipClassCodeSimpleType{FacetValue="CHEM", Description="Chemical"},
                new TipClassCodeSimpleType{FacetValue="CNTFTG", Description="Counterfitting"},
                new TipClassCodeSimpleType{FacetValue="CTMN", Description="Contaimination"},
                new TipClassCodeSimpleType{FacetValue="CYBER", Description="Cyberstalking"},
                new TipClassCodeSimpleType{FacetValue="EXPL", Description="Explosives"},
                new TipClassCodeSimpleType{FacetValue="FRAUD", Description="Fraud"},
                new TipClassCodeSimpleType{FacetValue="FUND", Description="Terrorism Funding"},
                new TipClassCodeSimpleType{FacetValue="HATE", Description="Hate Crime"},
                new TipClassCodeSimpleType{FacetValue="INCEND", Description="Incendiary"},
                new TipClassCodeSimpleType{FacetValue="INFRA", Description="Critical Infrastructure"},
                new TipClassCodeSimpleType{FacetValue="LAUND", Description="Money Laundering"},
                new TipClassCodeSimpleType{FacetValue="NCLR", Description="Nuclear/Radiological"},
                new TipClassCodeSimpleType{FacetValue="SPCSA", Description="Suspicious Activity"},
                new TipClassCodeSimpleType{FacetValue="SPCSP", Description="Suspicious Person"},
                new TipClassCodeSimpleType{FacetValue="SPCSSBST", Description="Suspicious Substance"},
                new TipClassCodeSimpleType{FacetValue="THRTPUB", Description="Threat Against Public Figure"},
                new TipClassCodeSimpleType{FacetValue="VRUS", Description="Virus/Worm"}
            };
            classes.ForEach(s => context.TipClassCodeSimpleType.Add(s));
            context.SaveChanges();

            var domains = new List<TipDomainCodeSimpleType>
            {
               new TipDomainCodeSimpleType{FacetValue="A", Description="Criminal Incident"},
                new TipDomainCodeSimpleType{FacetValue="B", Description="Critical Infrastructure"},
                new TipDomainCodeSimpleType{FacetValue="C", Description="Cyber Crime"},
                new TipDomainCodeSimpleType{FacetValue="D", Description="Financial Incident"},
                new TipDomainCodeSimpleType{FacetValue="E", Description="Intelligence"},
                new TipDomainCodeSimpleType{FacetValue="F", Description="Security Issue"},
                new TipDomainCodeSimpleType{FacetValue="G", Description="Suspicious Incident"},
                new TipDomainCodeSimpleType{FacetValue="H", Description="Threats/Crimes Against Persons"}
            };
            domains.ForEach(s => context.TipDomainCodeSimpleType.Add(s));
            context.SaveChanges();

            var haircolors = new List<HairColor>
            {
                new HairColor{HairColorCode="XXX",Description="Bald"},
                new HairColor{HairColorCode="BLK",Description="Black"},
                new HairColor{HairColorCode="BLN",Description="Blond or Strawberry"},
                new HairColor{HairColorCode="BLU",Description="Blue"},
                new HairColor{HairColorCode="BR0",Description="Brown"},
                new HairColor{HairColorCode="GRN",Description="Green"},
                new HairColor{HairColorCode="GRY",Description="Gray or Partially Gray"},
                new HairColor{HairColorCode="0NG",Description="Orange"},
                new HairColor{HairColorCode="PLE",Description="Purple"},
                new HairColor{HairColorCode="PNK",Description="Pink"},
                new HairColor{HairColorCode="RED",Description="Red or Auburn"},
                new HairColor{HairColorCode="SDY",Description="Sandy"},
                new HairColor{HairColorCode="WHI",Description="White"}
            };
            haircolors.ForEach(s => context.HairColor.Add(s));
            context.SaveChanges();

            var eyecolors = new List<EyeColor>
            {
                new EyeColor{EyeColorCode="BLK", Description="Black"},
                new EyeColor{EyeColorCode="BLU", Description="Blue"},
                new EyeColor{EyeColorCode="BR0", Description="Brown"},
                new EyeColor{EyeColorCode="GRN", Description="Green"},
                new EyeColor{EyeColorCode="GRY", Description="Gray"},
                new EyeColor{EyeColorCode="HAZ", Description="Hazel"},
                new EyeColor{EyeColorCode="MAR", Description="Maroon"},
                new EyeColor{EyeColorCode="PNK", Description="Pink"},
                new EyeColor{EyeColorCode="XXX", Description="Unknown"},
                new EyeColor{EyeColorCode="MUL", Description="Multi-Colored"}
            };
            eyecolors.ForEach(s => context.EyeColor.Add(s));
            context.SaveChanges();


            var genders = new List<Gender>
            {
                new Gender{GenderCode="M", Description="Male"},
                new Gender{GenderCode="F", Description="Female"},
                new Gender{GenderCode="U", Description="Unknown"}
            };
            genders.ForEach(s => context.Gender.Add(s));
            context.SaveChanges();

            var heights = new List<Height>
            {
                new Height{Description="4ft"},
                new Height{Description="4ft 1in"},
                new Height{Description="4ft 2in"},
                new Height{Description="4ft 3in"},
                new Height{Description="4ft 4in"},
                new Height{Description="4ft 5in"},
                new Height{Description="4ft 6in"},
                new Height{Description="4ft 7in"},
                new Height{Description="4ft 8in"},
                new Height{Description="4ft 9in"},
                new Height{Description="4ft 10in"},
                new Height{Description="4ft 11in"},
                new Height{Description="5ft"},
                new Height{Description="5ft 1in"},
                new Height{Description="5ft 2in"},
                new Height{Description="5ft 3in"},
                new Height{Description="5ft 4in"},
                new Height{Description="5ft 5in"},
                new Height{Description="5ft 6in"},
                new Height{Description="5ft 7in"},
                new Height{Description="5ft 8in"},
                new Height{Description="5ft 9in"},
                new Height{Description="5ft 10in"},
                new Height{Description="5ft 11in"},
                new Height{Description="6ft"},
                new Height{Description="6ft 1in"},
                new Height{Description="6ft 2in"},
                new Height{Description="6ft 3in"},
                new Height{Description="6ft 4in"},
                new Height{Description="6ft 5in"},
                new Height{Description="6ft 6in"},
                new Height{Description="6ft 7in"},
                new Height{Description="6ft 8in"},
                new Height{Description="6ft 9in"},
                new Height{Description="6ft 10in"},
                new Height{Description="6ft 11in"},
                new Height{Description="7ft"},
                new Height{Description="7ft 1in"},
                new Height{Description="7ft 2in"},
                new Height{Description="7ft 3in"},
                new Height{Description="7ft 4in"},
                new Height{Description="7ft 5in"},
                new Height{Description="7ft 6in"},
                new Height{Description="7ft 7in"},
                new Height{Description="7ft 8in"},
                new Height{Description="7ft 9in"},
                new Height{Description="7ft 10in"},
                new Height{Description="7ft 11in"},
                new Height{Description="8ft"}
            };
            heights.ForEach(s => context.Height.Add(s));
            context.SaveChanges();

            var weights = new List<Weight>
            {
                 new Weight{Description="50"},
             new Weight{Description="55"},
             new Weight{Description="60"},
             new Weight{Description="65"},
             new Weight{Description="70"},
             new Weight{Description="75"},
             new Weight{Description="80"},
             new Weight{Description="85"},
             new Weight{Description="90"},
             new Weight{Description="95"},
             new Weight{Description="100"},
             new Weight{Description="105"},
             new Weight{Description="110"},
             new Weight{Description="115"},
             new Weight{Description="120"},
             new Weight{Description="125"},
             new Weight{Description="130"},
             new Weight{Description="135"},
             new Weight{Description="140"},
             new Weight{Description="145"},
             new Weight{Description="150"},
             new Weight{Description="155"},
             new Weight{Description="160"},
             new Weight{Description="165"},
             new Weight{Description="170"},
             new Weight{Description="175"},
             new Weight{Description="180"},
             new Weight{Description="185"},
             new Weight{Description="190"},
             new Weight{Description="195"},
             new Weight{Description="200"},
             new Weight{Description="205"},
             new Weight{Description="210"},
             new Weight{Description="215"},
             new Weight{Description="220"},
             new Weight{Description="225"},
             new Weight{Description="230"},
             new Weight{Description="235"},
             new Weight{Description="240"},
             new Weight{Description="245"},
             new Weight{Description="250"},
             new Weight{Description="255"},
             new Weight{Description="260"},
             new Weight{Description="265"},
             new Weight{Description="270"},
             new Weight{Description="275"},
             new Weight{Description="280"},
             new Weight{Description="285"},
             new Weight{Description="290"},
             new Weight{Description="295"},
             new Weight{Description="300"},
             new Weight{Description="305"},
             new Weight{Description="310"},
             new Weight{Description="315"},
             new Weight{Description="320"},
             new Weight{Description="325"},
             new Weight{Description="330"},
             new Weight{Description="335"},
             new Weight{Description="340"},
             new Weight{Description="345"},
             new Weight{Description="350"},
             new Weight{Description="355"},
             new Weight{Description="360"},
             new Weight{Description="365"},
             new Weight{Description="370"},
             new Weight{Description="375"},
             new Weight{Description="380"},
             new Weight{Description="385"},
             new Weight{Description="390"},
             new Weight{Description="395"},
             new Weight{Description="400"},
             new Weight{Description="405"},
             new Weight{Description="410"},
             new Weight{Description="415"},
             new Weight{Description="420"},
             new Weight{Description="425"},
             new Weight{Description="430"},
             new Weight{Description="435"},
             new Weight{Description="440"},
             new Weight{Description="445"},
             new Weight{Description="450"}
            };
            weights.ForEach(s => context.Weight.Add(s));
            context.SaveChanges();

            var races = new List<Race>
            {
                new Race{RaceCode="W", Description="White"},
                new Race{RaceCode="B", Description="Black"},
                new Race{RaceCode="A", Description="Asian or Pacific Islander"},
                new Race{RaceCode="I", Description="American Indian or Alaskan Native"},
                new Race{RaceCode="U", Description="Unknown"}
            };
            races.ForEach(s => context.Race.Add(s));
            context.SaveChanges();


            var ethnicities = new List<Ethnicity>
            {
                new Ethnicity{EthnicityCode="H", Description="Hispanic or Latino" },
                new Ethnicity{EthnicityCode="N", Description="Non-Hispanic or Not Latino" },
                new Ethnicity{EthnicityCode="U", Description="Unknown" }
            };
            ethnicities.ForEach(s => context.Ethnicity.Add(s));
            context.SaveChanges();

            var nationalities = new List<Nationality>
            {
                new Nationality{Description="United States"},
            new Nationality{Description="Afghanistan"},
            new Nationality{Description="Akrotiri"},
            new Nationality{Description="Albania"},
            new Nationality{Description="Algeria"},
            new Nationality{Description="American Samoa"},
            new Nationality{Description="Andorra"},
            new Nationality{Description="Angola"},
            new Nationality{Description="Anguilla"},
            new Nationality{Description="Antarctica"},
            new Nationality{Description="Antigua and Barbuda"},
            new Nationality{Description="Arctic Ocean"},
            new Nationality{Description="Argentina"},
            new Nationality{Description="Armenia"},
            new Nationality{Description="Aruba"},
            new Nationality{Description="Ashmore and Cartier Islands"},
            new Nationality{Description="Atlantic Ocean"},
            new Nationality{Description="Australia"},
            new Nationality{Description="Austria"},
            new Nationality{Description="Azerbaijan"},
            new Nationality{Description="Bahamas, The"},
            new Nationality{Description="Bahrain"},
            new Nationality{Description="Baker Island"},
            new Nationality{Description="Bangladesh"},
            new Nationality{Description="Barbados"},
            new Nationality{Description="Bassas da India"},
            new Nationality{Description="Belarus"},
            new Nationality{Description="Belgium"},
            new Nationality{Description="Belize"},
            new Nationality{Description="Benin"},
            new Nationality{Description="Bermuda"},
            new Nationality{Description="Bhutan"},
            new Nationality{Description="Bolivia"},
            new Nationality{Description="Bosnia and Herzegovina"},
            new Nationality{Description="Botswana"},
            new Nationality{Description="Bouvet Island"},
            new Nationality{Description="Brazil"},
            new Nationality{Description="British Indian Ocean Territory"},
            new Nationality{Description="British Virgin Islands"},
            new Nationality{Description="Brunei"},
            new Nationality{Description="Bulgaria"},
            new Nationality{Description="Burkina Faso"},
            new Nationality{Description="Burma"},
            new Nationality{Description="Burundi"},
            new Nationality{Description="Cambodia"},
            new Nationality{Description="Cameroon"},
            new Nationality{Description="Canada"},
            new Nationality{Description="Cape Verde"},
            new Nationality{Description="Cayman Islands"},
            new Nationality{Description="Central African Republic"},
            new Nationality{Description="Chad"},
            new Nationality{Description="Chile"},
            new Nationality{Description="China"},
            new Nationality{Description="Christmas Island"},
            new Nationality{Description="Clipperton Island"},
            new Nationality{Description="Cocos (Keeling) Islands"},
            new Nationality{Description="Colombia"},
            new Nationality{Description="Comoros"},
            new Nationality{Description="Congo, Democratic Republic of the"},
            new Nationality{Description="Congo, Republic of the"},
            new Nationality{Description="Cook Islands"},
            new Nationality{Description="Coral Sea Islands"},
            new Nationality{Description="Costa Rica"},
            new Nationality{Description="Cote d Ivoire"},
            new Nationality{Description="Croatia"},
            new Nationality{Description="Cuba"},
            new Nationality{Description="Cyprus"},
            new Nationality{Description="Czech Republic"},
            new Nationality{Description="Denmark"},
            new Nationality{Description="Dhekelia"},
            new Nationality{Description="Djibouti"},
            new Nationality{Description="Dominica"},
            new Nationality{Description="Dominican Republic"},
            new Nationality{Description="East Timor"},
            new Nationality{Description="Ecuador"},
            new Nationality{Description="Egypt"},
            new Nationality{Description="El Salvador"},
            new Nationality{Description="Equatorial Guinea"},
            new Nationality{Description="Eritrea"},
            new Nationality{Description="Estonia"},
            new Nationality{Description="Ethiopia"},
            new Nationality{Description="Europa Island"},
            new Nationality{Description="European Union"},
            new Nationality{Description="Falkland Islands (Islas Malvinas)"},
            new Nationality{Description="Faroe Islands"},
            new Nationality{Description="Fiji"},
            new Nationality{Description="Finland"},
            new Nationality{Description="France"},
            new Nationality{Description="French Guiana"},
            new Nationality{Description="French Polynesia"},
            new Nationality{Description="French Southern and Antarctic Lands"},
            new Nationality{Description="Gabon"},
            new Nationality{Description="Gambia, The"},
            new Nationality{Description="Gaza Strip"},
            new Nationality{Description="Georgia"},
            new Nationality{Description="Germany"},
            new Nationality{Description="Ghana"},
            new Nationality{Description="Gibraltar"},
            new Nationality{Description="Glorioso Islands"},
            new Nationality{Description="Greece"},
            new Nationality{Description="Greenland"},
            new Nationality{Description="Grenada"},
            new Nationality{Description="Guadeloupe"},
            new Nationality{Description="Guam"},
            new Nationality{Description="Guatemala"},
            new Nationality{Description="Guernsey"},
            new Nationality{Description="Guinea"},
            new Nationality{Description="Guinea-Bissau"},
            new Nationality{Description="Guyana"},
            new Nationality{Description="Haiti"},
            new Nationality{Description="Heard Island and McDonald Islands"},
            new Nationality{Description="Holy See (Vatican City)"},
            new Nationality{Description="Honduras"},
            new Nationality{Description="Hong Kong"},
            new Nationality{Description="Howland Island"},
            new Nationality{Description="Hungary"},
            new Nationality{Description="Iceland"},
            new Nationality{Description="India"},
            new Nationality{Description="Indian Ocean"},
            new Nationality{Description="Indonesia"},
            new Nationality{Description="Iran"},
            new Nationality{Description="Iraq"},
            new Nationality{Description="Ireland"},
            new Nationality{Description="Isle of Man"},
            new Nationality{Description="Israel"},
            new Nationality{Description="Italy"},
            new Nationality{Description="Jamaica"},
            new Nationality{Description="Jan Mayen"},
            new Nationality{Description="Japan"},
            new Nationality{Description="Jarvis Island"},
            new Nationality{Description="Jersey"},
            new Nationality{Description="Johnston Atoll"},
            new Nationality{Description="Jordan"},
            new Nationality{Description="Juan de Nova Island"},
            new Nationality{Description="Kazakhstan"},
            new Nationality{Description="Kenya"},
            new Nationality{Description="Kingman Reef"},
            new Nationality{Description="Kiribati"},
            new Nationality{Description="Korea, North"},
            new Nationality{Description="Korea, South"},
            new Nationality{Description="Kuwait"},
            new Nationality{Description="Kyrgyzstan"},
            new Nationality{Description="Laos"},
            new Nationality{Description="Latvia"},
            new Nationality{Description="Lebanon"},
            new Nationality{Description="Lesotho"},
            new Nationality{Description="Liberia"},
            new Nationality{Description="Libya"},
            new Nationality{Description="Liechtenstein"},
            new Nationality{Description="Lithuania"},
            new Nationality{Description="Luxembourg"},
            new Nationality{Description="Macau"},
            new Nationality{Description="Macedonia"},
            new Nationality{Description="Madagascar"},
            new Nationality{Description="Malawi"},
            new Nationality{Description="Malaysia"},
            new Nationality{Description="Maldives"},
            new Nationality{Description="Mali"},
            new Nationality{Description="Malta"},
            new Nationality{Description="Marshall Islands"},
            new Nationality{Description="Martinique"},
            new Nationality{Description="Mauritania"},
            new Nationality{Description="Mauritius"},
            new Nationality{Description="Mayotte"},
            new Nationality{Description="Mexico"},
            new Nationality{Description="Micronesia, Federated States of"},
            new Nationality{Description="Midway Islands"},
            new Nationality{Description="Moldova"},
            new Nationality{Description="Monaco"},
            new Nationality{Description="Mongolia"},
            new Nationality{Description="Montserrat"},
            new Nationality{Description="Morocco"},
            new Nationality{Description="Mozambique"},
            new Nationality{Description="Namibia"},
            new Nationality{Description="Nauru"},
            new Nationality{Description="Navassa Island"},
            new Nationality{Description="Nepal"},
            new Nationality{Description="Netherlands"},
            new Nationality{Description="Netherlands Antilles"},
            new Nationality{Description="New Caledonia"},
            new Nationality{Description="New Zealand"},
            new Nationality{Description="Nicaragua"},
            new Nationality{Description="Niger"},
            new Nationality{Description="Nigeria"},
            new Nationality{Description="Niue"},
            new Nationality{Description="Norfolk Island"},
            new Nationality{Description="Northern Mariana Islands"},
            new Nationality{Description="Norway"},
            new Nationality{Description="Oman"},
            new Nationality{Description="Pacific Ocean"},
            new Nationality{Description="Pakistan"},
            new Nationality{Description="Palau"},
            new Nationality{Description="Palmyra Atoll"},
            new Nationality{Description="Panama"},
            new Nationality{Description="Papua New Guinea"},
            new Nationality{Description="Paracel Islands"},
            new Nationality{Description="Paraguay"},
            new Nationality{Description="Peru"},
            new Nationality{Description="Philippines"},
            new Nationality{Description="Pitcairn Islands"},
            new Nationality{Description="Poland"},
            new Nationality{Description="Portugal"},
            new Nationality{Description="Puerto Rico"},
            new Nationality{Description="Qatar"},
            new Nationality{Description="Reunion"},
            new Nationality{Description="Romania"},
            new Nationality{Description="Russia"},
            new Nationality{Description="Rwanda"},
            new Nationality{Description="Saint Helena"},
            new Nationality{Description="Saint Kitts and Nevis"},
            new Nationality{Description="Saint Lucia"},
            new Nationality{Description="Saint Pierre and Miquelon"},
            new Nationality{Description="Saint Vincent and the Grenadines"},
            new Nationality{Description="Samoa"},
            new Nationality{Description="San Marino"},
            new Nationality{Description="Sao Tome and Principe"},
            new Nationality{Description="Saudi Arabia"},
            new Nationality{Description="Senegal"},
            new Nationality{Description="Serbia and Montenegro"},
            new Nationality{Description="Seychelles"},
            new Nationality{Description="Sierra Leone"},
            new Nationality{Description="Singapore"},
            new Nationality{Description="Slovakia"},
            new Nationality{Description="Slovenia"},
            new Nationality{Description="Solomon Islands"},
            new Nationality{Description="Somalia"},
            new Nationality{Description="South Africa"},
            new Nationality{Description="South Georgia and the South Sandwich Islands"},
            new Nationality{Description="Southern Ocean"},
            new Nationality{Description="Spain"},
            new Nationality{Description="Spratly Islands"},
            new Nationality{Description="Sri Lanka"},
            new Nationality{Description="Sudan"},
            new Nationality{Description="Suriname"},
            new Nationality{Description="Svalbard"},
            new Nationality{Description="Swaziland"},
            new Nationality{Description="Sweden"},
            new Nationality{Description="Switzerland"},
            new Nationality{Description="Syria"},
            new Nationality{Description="Taiwan"},
            new Nationality{Description="Tajikistan"},
            new Nationality{Description="Tanzania"},
            new Nationality{Description="Thailand"},
            new Nationality{Description="Togo"},
            new Nationality{Description="Tokelau"},
            new Nationality{Description="Tonga"},
            new Nationality{Description="Trinidad and Tobago"},
            new Nationality{Description="Tromelin Island"},
            new Nationality{Description="Tunisia"},
            new Nationality{Description="Turkey"},
            new Nationality{Description="Turkmenistan"},
            new Nationality{Description="Turks and Caicos Islands"},
            new Nationality{Description="Tuvalu"},
            new Nationality{Description="Uganda"},
            new Nationality{Description="Ukraine"},
            new Nationality{Description="United Arab Emirates"},
            new Nationality{Description="United Kingdom"},
            new Nationality{Description="Uruguay"},
            new Nationality{Description="Uzbekistan"},
            new Nationality{Description="Vanuatu"},
            new Nationality{Description="Venezuela"},
            new Nationality{Description="Vietnam"},
            new Nationality{Description="Virgin Islands"},
            new Nationality{Description="Wake Island"},
            new Nationality{Description="Wallis and Futuna"},
            new Nationality{Description="West Bank"},
            new Nationality{Description="Western Sahara"},
            new Nationality{Description="Yemen"},
            new Nationality{Description="Zambia"},
            new Nationality{Description="Zimbabwe"}

            };
            nationalities.ForEach(s => context.Nationality.Add(s));
            context.SaveChanges();

            var skintones = new List<SkinTone>
            {
            new SkinTone{SkinToneCode="ALB",Description="ALB - ALBINO"},
            new SkinTone{SkinToneCode="BLK",Description = "BLK - BLACK"},
            new SkinTone{SkinToneCode="DBR",Description = "DBR - DARK BROWN"},
            new SkinTone{SkinToneCode="DRK",Description = "DRK - DARK"},
            new SkinTone{SkinToneCode="FAR",Description = "FAR - FAIR"},
            new SkinTone{SkinToneCode="LBR",Description = "LBR - LIGHT BROWN"},
            new SkinTone{SkinToneCode="LGT",Description = "LGT - LIGHT"},
            new SkinTone{SkinToneCode="MBR",Description = "MBR - MEDIUM BROWN"},
            new SkinTone{SkinToneCode="MED",Description = "MED - MEDIUM"},
            new SkinTone{SkinToneCode="OLV",Description = "OLV - OLIVE"},
            new SkinTone{SkinToneCode="RUD",Description = "RUD - RUDDY"},
            new SkinTone{SkinToneCode="SAL",Description = "SAL - SALLOW"},
            new SkinTone{SkinToneCode="YEL",Description = "YEL - YELLOW"}
            };
            skintones.ForEach(s => context.SkinTone.Add(s));
            context.SaveChanges();
        }

    }
}